interface Node {
  id: ID!
}

enum OrderDirection {
  ASC
  DESC
}

scalar Cursor
scalar Time
scalar UUID

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: Cursor
  endCursor: Cursor
}

enum TaskType {
  IPDNSBL
}

enum TaskStatus {
  WAITING
  IN_PROGRESS
  DONE
  ERROR
}

type Task implements Node {
  id: ID!
  type: TaskType!
  ip_address: String!
  status: TaskStatus!
  error: String
}

type Query {
  node(id: ID!): Node
  getIPDetails(ip: String!): IP
}

type Mutation {
  enqueue(ip: [String!]): [Task]
}