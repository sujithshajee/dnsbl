"""
AppQueryWhereInput is used for filtering AppQuery objects.
Input was generated by ent.
"""
input AppQueryWhereInput {
  not: AppQueryWhereInput
  and: [AppQueryWhereInput!]
  or: [AppQueryWhereInput!]
  
  """created_at field predicates"""
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  
  """responses edge predicates"""
  hasResponses: Boolean
  hasResponsesWith: [AppResponseWhereInput!]
  
  """ipaddress edge predicates"""
  hasIpaddress: Boolean
  hasIpaddressWith: [IPWhereInput!]
}

"""
AppResponseWhereInput is used for filtering AppResponse objects.
Input was generated by ent.
"""
input AppResponseWhereInput {
  not: AppResponseWhereInput
  and: [AppResponseWhereInput!]
  or: [AppResponseWhereInput!]
  
  """created_at field predicates"""
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  
  """responsecode field predicates"""
  responsecode: String
  responsecodeNEQ: String
  responsecodeIn: [String!]
  responsecodeNotIn: [String!]
  responsecodeGT: String
  responsecodeGTE: String
  responsecodeLT: String
  responsecodeLTE: String
  responsecodeContains: String
  responsecodeHasPrefix: String
  responsecodeHasSuffix: String
  responsecodeEqualFold: String
  responsecodeContainsFold: String
  
  """codedescription field predicates"""
  codedescription: String
  codedescriptionNEQ: String
  codedescriptionIn: [String!]
  codedescriptionNotIn: [String!]
  codedescriptionGT: String
  codedescriptionGTE: String
  codedescriptionLT: String
  codedescriptionLTE: String
  codedescriptionContains: String
  codedescriptionHasPrefix: String
  codedescriptionHasSuffix: String
  codedescriptionEqualFold: String
  codedescriptionContainsFold: String
  
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  
  """query edge predicates"""
  hasQuery: Boolean
  hasQueryWith: [AppQueryWhereInput!]
}

"""
IPWhereInput is used for filtering IP objects.
Input was generated by ent.
"""
input IPWhereInput {
  not: IPWhereInput
  and: [IPWhereInput!]
  or: [IPWhereInput!]
  
  """created_at field predicates"""
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  
  """ip_address field predicates"""
  ipAddress: String
  ipAddressNEQ: String
  ipAddressIn: [String!]
  ipAddressNotIn: [String!]
  ipAddressGT: String
  ipAddressGTE: String
  ipAddressLT: String
  ipAddressLTE: String
  ipAddressContains: String
  ipAddressHasPrefix: String
  ipAddressHasSuffix: String
  ipAddressEqualFold: String
  ipAddressContainsFold: String
  
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  
  """queries edge predicates"""
  hasQueries: Boolean
  hasQueriesWith: [AppQueryWhereInput!]
}

"""
TaskWhereInput is used for filtering Task objects.
Input was generated by ent.
"""
input TaskWhereInput {
  not: TaskWhereInput
  and: [TaskWhereInput!]
  or: [TaskWhereInput!]
  
  """created_at field predicates"""
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  
  """ipaddress field predicates"""
  ipaddress: String
  ipaddressNEQ: String
  ipaddressIn: [String!]
  ipaddressNotIn: [String!]
  ipaddressGT: String
  ipaddressGTE: String
  ipaddressLT: String
  ipaddressLTE: String
  ipaddressContains: String
  ipaddressHasPrefix: String
  ipaddressHasSuffix: String
  ipaddressIsNil: Boolean
  ipaddressNotNil: Boolean
  ipaddressEqualFold: String
  ipaddressContainsFold: String
  
  """error field predicates"""
  error: String
  errorNEQ: String
  errorIn: [String!]
  errorNotIn: [String!]
  errorGT: String
  errorGTE: String
  errorLT: String
  errorLTE: String
  errorContains: String
  errorHasPrefix: String
  errorHasSuffix: String
  errorIsNil: Boolean
  errorNotNil: Boolean
  errorEqualFold: String
  errorContainsFold: String
  
  """completed_by field predicates"""
  completedBy: Time
  completedByNEQ: Time
  completedByIn: [Time!]
  completedByNotIn: [Time!]
  completedByGT: Time
  completedByGTE: Time
  completedByLT: Time
  completedByLTE: Time
  completedByIsNil: Boolean
  completedByNotNil: Boolean
  
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
}

"""
UserWhereInput is used for filtering User objects.
Input was generated by ent.
"""
input UserWhereInput {
  not: UserWhereInput
  and: [UserWhereInput!]
  or: [UserWhereInput!]
  
  """created_at field predicates"""
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  
  """username field predicates"""
  username: String
  usernameNEQ: String
  usernameIn: [String!]
  usernameNotIn: [String!]
  usernameGT: String
  usernameGTE: String
  usernameLT: String
  usernameLTE: String
  usernameContains: String
  usernameHasPrefix: String
  usernameHasSuffix: String
  usernameEqualFold: String
  usernameContainsFold: String
  
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
}
